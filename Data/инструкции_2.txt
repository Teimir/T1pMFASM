Примечание: инструкции чувствительны к регистру символов! Все инструкции 
пишутся в нижнем регистре. Для табличек синтаксиса инструкций с краю
дается размер инструкции.
;-----------------------------------------------------------------------------------
1. Регистры.
    Всего доступно 8 регистров общего назначения размером в 2 байта - r:0-r:7. 
    Все эти регистры на данный момент равнозначны друг другу, т.е. любая инструкция 
    может работать с любым регистром.
;-----------------------------------------------------------------------------------
2. Память.
    На данный момент всего доступно 65536 байт памяти, включая память инструкций.
;-----------------------------------------------------------------------------------
3. Структура программы.
    Структура программы выглядит следующим образом:

    format binary

    include 'T1\T1.inc'
        ;код
        ...
        hlt
        ;переменные
        ...
    endprog
;-----------------------------------------------------------------------------------
4. Инструкции.
    Инструкции могут быть однобайтовые и двухбайтовые. При этом одна и та же 
    инструкция, в зависимости от операнда, может занимать разное количество байт
    и иметь разные опкоды.
;-----------------------------------------------------------------------------------
4.1. Nop
    Пустая инструкция, ничего не делает. Операндов нет.
;-----------------------------------------------------------------------------------
4.2. Hlt
    Переводит процессор в режим ожидания, обычно ставится в конце программы.
    Операндов нет.
;-----------------------------------------------------------------------------------
4.3. Out.
    Описание: выполняет запись операнда в регистр вывода. Синтаксис:
        out r:n - загрузка значения из регистра общего назначения       (1 байт)
        out [r:n]   загрузка значения по адресу из регистра             (1 байт)
;-----------------------------------------------------------------------------------
4.4. In.
    Описание: выполняет выгрузку значения из регистра ввода. В текущем бенче - 
    (счетчик тиков) mod 65536. Синтаксис см. команда out.
;-----------------------------------------------------------------------------------
4.5. Jmp.
    Описание: выполняет запись значения операнда в регистр-указатель инструкций 
    Синтаксис:
        jmp r:n - загрузка значения из регистра общего назначения       (1 байт)
        jmp [r:n]   загрузка значения по адресу из регистра             (1 байт)
        jmp const   загрузка значения из константы                      (3 байта)
;-----------------------------------------------------------------------------------
4.6. Jz/jnz/ja/jna
    Описание: выполняет переход по адресу, если соответствующий поднят/опущен. Все 
    вариации двухбайтовые! Синтаксис см. jmp.
;-----------------------------------------------------------------------------------
4.7. Mov.
    Описание: выполняет копирование данных из второго операнда в первый. Синтаксис:
        mov r:n, r:n        Перемещение между регистрами                (2 байта)
        mov r:n, [r:n]      Загрузка 1-го по адресу из 2-го             (2 байта)
        mov [r:n], r:n      Выгрузка 2-го в память по адресу из 1-го    (2 байта)
        mov r:n, const      Загрузка константы                          (3 байта)
        mov r:n, [const]    Загрузка по константному адресу             (3 байта)
        mov [const], r:n    Выгрузка по константному адресу             (3 байта)
;-----------------------------------------------------------------------------------
4.8. Add
    Описание: складывает первый операнд со вторым и результат записывает в первый.
    Синтаксис:
        add r:n, r:n        Перемещение между регистрами                (2 байта)
        add r:n, [r:n]      Загрузка 1-го по адресу из 2-го             (2 байта)
        add [r:n], r:n      Выгрузка 2-го в память по адресу из 1-го    (2 байта)
        add r:n, const      Загрузка константы                          (3 байта)
;-----------------------------------------------------------------------------------
4.9. Sub
    Описание: вычитает из первого операнда второй и результат записывает в первый.
    Синтаксис см. add (версия с константой не является отдельным опкодом, а 
    макросом  с инверсией константы)
;-----------------------------------------------------------------------------------
4.10. And
    Описание: выполняет побитовое "и" первого операнда со вторым и результат 
    записывает в первый. Синтаксис см. add (без версии с константой)
;-----------------------------------------------------------------------------------
4.11. Or
    Описание: выполняет побитовое "или" первого операнда со вторым и результат 
    записывает в первый. Синтаксис см. add (без версии с константой)
;-----------------------------------------------------------------------------------
4.12. Xor
    Описание: выполняет побитовое "исключающее или" первого операнда со вторым и 
    результат записывает в первый. Синтаксис см. add (без версии с константой)
;-----------------------------------------------------------------------------------
4.13. Cmp
    Сравнивает два аргумента и устанавливает флаги "ноль" и "больше".
    Синтаксис см. Add
;-----------------------------------------------------------------------------------
4.14. Inc/Dec
    Описание: однобайтовые инструкции, увеличивает/уменьшает операнд на единицу. 
    Операндом может быть только регистр! 
;-----------------------------------------------------------------------------------
